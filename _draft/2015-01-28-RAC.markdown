---
layout: post
title: 谈谈对ReactiveCocoa的理解

---

##背景

在《[Vizzle的下一步进化方向](http://akadealloc.github.io/blog/2014/11/20/MVC+.html)》中，我的一个想法是引入ViewModel

##Knowledge Required:

### 函数型语言


### FRP

##为什么都拿登录做例子

##Input和Output




##Signal

### Cold vs. Hot


### CreateSignal



```

RACSignal* sig = [RACSignal createSignal:^RACDisposable *(id<RACSubscriber> subscriber) {
   
    RACDisposable* disposal = [RACDisposable disposableWithBlock:^{
       
        NSLog(@"dispose!");
        [subscriber sendNext:@"a"];
        
    }];
    
    [disposal dispose];
    
    return disposal;
}];

[sig subscribeNext:^(id x) {
   
    NSLog(@"subscribed");
    
}];

```

##Marcos

###weakify(...)

@autoreleasePool{}



##Further Reading:

1. [ARC](http://clang.llvm.org/docs/AutomaticReferenceCounting.html#background)

2. [iOSFRP](https://leanpub.com/iosfrp/) by Ash Furrow

3. [Input and Outpit](http://blog.maybeapps.com/post/42894317939/input-and-output) by Josh Abernathy

4. [Reactive Cocoa Developer Conference • Panel Q&A and Discussion](https://www.youtube.com/watch?v=NzKp2AjnMMM);

5. [React 2014 : Erik Meijer - What does it mean to be Reactive?](https://www.youtube.com/watch?v=sTSQlYX5DU0) by Erik Meijier

6. [Limboy](http://limboy.me/image/FRP_ReactiveCocoa_large.png) by Limboy

7. [side effect](http://en.wikipedia.org/wiki/Side_effect_(computer_science) by wiki
