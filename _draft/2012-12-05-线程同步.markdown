
---
layout: pos
title: 线程同步

---

##同步问题

线程的同步问题主要是指，不同线程对内存中同一个数据结构进行修改时带来的问题，比如在某个时刻t，线程A正在对一个数组进行遍历，在这个时候线程B在对这个数组中的元素进行删除操作，这就会导致

##原子操作

考虑下面代码：

```
//声明j为nonatomic
@property(nonatomic,assign) int j;

...

for(int i=0; i<100; i++)
{
   dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{

        self.j++;
        NSLog(@"%d",self.j);
    
   });
}

```

由于`self.j`不具备原子性，因此多个线程对j的修改是无序的

我们将`self.j`声明为`atomic`：

```
@property(atomic,assign) int j;
```




##性能：



##Further Reading:

- [Synchronization](http://www.dreamingwish.com/article/the-ios-multithreaded-programming-guide-4-thread-synchronization.html)
- [几种锁的性能比较](http://perpendiculo.us/2009/09/synchronized-nslock-pthread-osspinlock-showdown-done-right/)